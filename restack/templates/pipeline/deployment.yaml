{{- if .Values.pipeline.image.repository }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "restack.fullname" . }}-pipeline
  labels:
    {{- include "restack.pipelineLabels" . | nindent 4 }}
  annotations:
    reloader.stakater.com/search: "true"
spec:
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  selector:
    matchLabels:
      {{- include "restack.pipelineSelectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "restack.pipelineSelectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "restack.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      terminationGracePeriodSeconds: {{ .Values.pipeline.terminationGracePeriodSeconds}}
      initContainers:
        - name: wait-for-restack
          image: busybox
          command: ['sh', '-c', 'until nc -z -v -w30 {{ include "restack.fullname" . }}-engine-api 6233; do echo "Waiting for restack..."; sleep 5; done']
        {{- if .Values.logs.gcp.bucket }}
        - name: workload-identity-initcontainer
          image: gcr.io/google.com/cloudsdktool/cloud-sdk:alpine
          command:
          - '/bin/bash'
          - '-c'
          - |
            curl -sS -H 'Metadata-Flavor: Google' 'http://169.254.169.254/computeMetadata/v1/instance/service-accounts/default/token' --retry 30 --retry-connrefused --retry-max-time 60 --connect-timeout 3 --fail --retry-all-errors > /dev/null && exit 0 || echo 'Retry limit exceeded. Failed to wait for metadata server to be available. Check if the gke-metadata-server Pod in the kube-system namespace is healthy.' >&2; exit 1
        {{- end }}
      containers:
        - name: {{ .Chart.Name }}-pipeline
          envFrom:
            - configMapRef:
                name: {{ include "restack.fullname" . }}-configmap
            - secretRef:
                name: {{ include "restack.fullname" . }}-secret
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.pipeline.image.repository }}:{{ .Values.pipeline.image.tag }}"
          imagePullPolicy: {{ .Values.pipeline.image.pullPolicy }}
          ports:
            - port: 8081
              targetPort: 8081
              protocol: TCP
              name: http
              containerPort: 8081
          {{- if .Values.pipeline.livenessProbe.enabled }}
          livenessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: {{ .Values.pipeline.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.pipeline.livenessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.pipeline.livenessProbe.timeoutSeconds }}
            successThreshold: {{ .Values.pipeline.livenessProbe.successThreshold }}
            failureThreshold: {{ .Values.pipeline.livenessProbe.failureThreshold }}
          {{- end }}
          {{- if .Values.pipeline.readinessProbe.enabled }}
          readinessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: {{ .Values.pipeline.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.pipeline.readinessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.pipeline.readinessProbe.timeoutSeconds }}
            successThreshold: {{ .Values.pipeline.readinessProbe.successThreshold }}
            failureThreshold: {{ .Values.pipeline.readinessProbe.failureThreshold }}
          {{- end }}
          resources:
            limits:
              cpu: {{ .Values.pipeline.resources.cpu }}
              memory: {{ .Values.pipeline.resources.memory }}
            requests:
              cpu: {{ .Values.pipeline.resources.cpu }}
              memory: {{ .Values.pipeline.resources.memory }}
        
        {{- if .Values.logs.enabled }}
        # Sidecar container for logging
        - name: deployment-logs
          image: ghcr.io/restackio/k8s-logs-sidecar:main
          imagePullPolicy: Always
          env:
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: DEPLOYMENT_NAME
              value: {{ include "restack.fullname" . }}-pipeline
            - name: GCS_BUCKET_NAME
              value: {{ .Values.logs.gcp.bucket }}
            - name: POD_SELECTOR
              value: {{ include "restack.name" . }}-pipeline
            - name: CONTAINER_LOGS_NAME
              value: {{ .Chart.Name }}-pipeline
        {{- end }}

      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end }}
